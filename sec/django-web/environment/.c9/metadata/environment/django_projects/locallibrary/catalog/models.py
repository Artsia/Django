{"changed":true,"filter":false,"title":"models.py","tooltip":"/django_projects/locallibrary/catalog/models.py","value":"#from django.db import models\n\n# Create your models here.\nfrom django.db import models\nfrom django.urls import reverse\n\nclass MyModelName(models.Model):\n    \"\"\"A typical class defining a model, derived from the Model class.\"\"\"\n\n    # Fields\n    my_field_name = models.CharField(max_length=20, help_text='Enter field documentation')\n    # …\n\n    # Metadata\n    class Meta:\n        ordering = ['-my_field_name']\n        #ordering = ['title', '-pubdate'] #ie. book db\n\n\n    # Methods\n    def get_absolute_url(self):\n        \"\"\"Returns the URL to access a particular instance of MyModelName.\"\"\"\n        return reverse('model-detail-view', args=[str(self.id)])\n\n    def __str__(self):\n        \"\"\"String for representing the MyModelName object (in Admin site etc.).\"\"\"\n        return self.my_field_name\n\n\n# Create a new record using the model's constructor.\nrecord = MyModelName(my_field_name=\"Instance #1\")\n\n# Save the object into the database.\nrecord.save()\n\n\n# Access model field values using Python attributes.\nprint(record.id) # should return 1 for the first record.\nprint(record.my_field_name) # should print 'Instance #1'\n\n# Change record by modifying the fields, then calling save().\nrecord.my_field_name = \"New Instance Name\"\nrecord.save()\n\n\n\n\n\nall_books = Book.objects.all()\nwild_books = Book.objects.filter(title__contains='wild')\nnumber_wild_books = wild_books.count()\n# Will match on: Fiction, Science fiction, non-fiction etc.\nbooks_containing_genre = Book.objects.filter(genre__name__icontains='fiction')\n\n\n\nclass Genre(models.Model):\n    \"\"\"Model representing a book genre.\"\"\"\n    name = models.CharField(max_length=200, help_text='Enter a book genre (e.g. Science Fiction)')\n\n    def __str__(self):\n        \"\"\"String for representing the Model object.\"\"\"\n        return self.name\n\n\nfrom django.urls import reverse # Used to generate URLs by reversing the URL patterns\n\nclass Book(models.Model):\n    \"\"\"Model representing a book (but not a specific copy of a book).\"\"\"\n    title = models.CharField(max_length=200)\n\n    # Foreign Key used because book can only have one author, but authors can have multiple books\n    # Author is a string rather than an object because it hasn't been declared yet in the file\n    author = models.ForeignKey('Author', on_delete=models.SET_NULL, null=True)\n\n    summary = models.TextField(max_length=1000, help_text='Enter a brief description of the book')\n    isbn = models.CharField('ISBN', max_length=13, unique=True,\n                             help_text='13 Character <a href=\"https://www.isbn-international.org/content/what-isbn\">ISBN number</a>')\n\n    # ManyToManyField used because genre can contain many books. Books can cover many genres.\n    # Genre class has already been defined so we can specify the object above.\n    genre = models.ManyToManyField(Genre, help_text='Select a genre for this book')\n\n    def __str__(self):\n        \"\"\"String for representing the Model object.\"\"\"\n        return self.title\n\n    def get_absolute_url(self):\n        \"\"\"Returns the URL to access a detail record for this book.\"\"\"\n        return reverse('book-detail', args=[str(self.id)])\n\n\nimport uuid # Required for unique book instances\n\nclass BookInstance(models.Model):\n    \"\"\"Model representing a specific copy of a book (i.e. that can be borrowed from the library).\"\"\"\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, help_text='Unique ID for this particular book across whole library')\n    book = models.ForeignKey('Book', on_delete=models.RESTRICT, null=True)\n    imprint = models.CharField(max_length=200)\n    due_back = models.DateField(null=True, blank=True)\n\n    LOAN_STATUS = (\n        ('m', 'Maintenance'),\n        ('o', 'On loan'),\n        ('a', 'Available'),\n        ('r', 'Reserved'),\n    )\n\n    status = models.CharField(\n        max_length=1,\n        choices=LOAN_STATUS,\n        blank=True,\n        default='m',\n        help_text='Book availability',\n    )\n\n    class Meta:\n        ordering = ['due_back']\n\n    def __str__(self):\n        \"\"\"String for representing the Model object.\"\"\"\n        return f'{self.id} ({self.book.title})'\n\n\n\nclass Author(models.Model):\n    \"\"\"Model representing an author.\"\"\"\n    first_name = models.CharField(max_length=100)\n    last_name = models.CharField(max_length=100)\n    date_of_birth = models.DateField(null=True, blank=True)\n    date_of_death = models.DateField('Died', null=True, blank=True)\n\n    class Meta:\n        ordering = ['last_name', 'first_name']\n\n    def get_absolute_url(self):\n        \"\"\"Returns the URL to access a particular author instance.\"\"\"\n        return reverse('author-detail', args=[str(self.id)])\n\n    def __str__(self):\n        \"\"\"String for representing the Model object.\"\"\"\n        return f'{self.last_name}, {self.first_name}'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","undoManager":{"mark":29,"position":33,"stack":[[{"start":{"row":3,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["from django.db import models","from django.urls import reverse","","class MyModelName(models.Model):","    \"\"\"A typical class defining a model, derived from the Model class.\"\"\"","","    # Fields","    my_field_name = models.CharField(max_length=20, help_text='Enter field documentation')","    # …","","    # Metadata","    class Meta:","        ordering = ['-my_field_name']","","    # Methods","    def get_absolute_url(self):","        \"\"\"Returns the URL to access a particular instance of MyModelName.\"\"\"","        return reverse('model-detail-view', args=[str(self.id)])","","    def __str__(self):","        \"\"\"String for representing the MyModelName object (in Admin site etc.).\"\"\"","        return self.my_field_name",""],"id":2}],[{"start":{"row":0,"column":28},"end":{"row":0,"column":29},"action":"insert","lines":["#"],"id":3}],[{"start":{"row":0,"column":28},"end":{"row":0,"column":29},"action":"remove","lines":["#"],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["#"],"id":5}],[{"start":{"row":25,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["",""]},{"start":{"row":27,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["",""]},{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["",""]},{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":31,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["my_field_name = models.CharField(max_length=20, help_text='Enter field documentation')",""],"id":7}],[{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"remove","lines":["",""],"id":8},{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":30,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":31,"column":0},"end":{"row":32,"column":0},"action":"insert","lines":["",""]},{"start":{"row":32,"column":0},"end":{"row":33,"column":0},"action":"insert","lines":["",""]},{"start":{"row":33,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["",""]},{"start":{"row":34,"column":0},"end":{"row":35,"column":0},"action":"insert","lines":["",""]},{"start":{"row":35,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["",""]},{"start":{"row":36,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["",""]},{"start":{"row":37,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["",""]},{"start":{"row":38,"column":0},"end":{"row":39,"column":0},"action":"insert","lines":["",""]},{"start":{"row":39,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["",""]},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["",""]},{"start":{"row":41,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["",""]},{"start":{"row":42,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["",""]},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":28,"column":0},"end":{"row":33,"column":0},"action":"remove","lines":["","my_field_name = models.CharField(max_length=20, help_text='Enter field documentation')","","","",""],"id":10}],[{"start":{"row":15,"column":8},"end":{"row":15,"column":9},"action":"insert","lines":["#"],"id":11}],[{"start":{"row":15,"column":38},"end":{"row":16,"column":0},"action":"insert","lines":["",""],"id":12},{"start":{"row":16,"column":0},"end":{"row":16,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":16,"column":8},"end":{"row":17,"column":0},"action":"insert","lines":["ordering = ['title', '-pubdate']",""],"id":13}],[{"start":{"row":16,"column":40},"end":{"row":16,"column":41},"action":"insert","lines":[" "],"id":14},{"start":{"row":16,"column":41},"end":{"row":16,"column":42},"action":"insert","lines":["3"]}],[{"start":{"row":16,"column":42},"end":{"row":16,"column":43},"action":"insert","lines":["i"],"id":15},{"start":{"row":16,"column":43},"end":{"row":16,"column":44},"action":"insert","lines":["e"]},{"start":{"row":16,"column":44},"end":{"row":16,"column":45},"action":"insert","lines":["."]}],[{"start":{"row":16,"column":45},"end":{"row":16,"column":46},"action":"insert","lines":[" "],"id":16},{"start":{"row":16,"column":46},"end":{"row":16,"column":47},"action":"insert","lines":["b"]},{"start":{"row":16,"column":47},"end":{"row":16,"column":48},"action":"insert","lines":["o"]},{"start":{"row":16,"column":48},"end":{"row":16,"column":49},"action":"insert","lines":["o"]},{"start":{"row":16,"column":49},"end":{"row":16,"column":50},"action":"insert","lines":["k"]}],[{"start":{"row":16,"column":50},"end":{"row":16,"column":51},"action":"insert","lines":[" "],"id":17},{"start":{"row":16,"column":51},"end":{"row":16,"column":52},"action":"insert","lines":["d"]},{"start":{"row":16,"column":52},"end":{"row":16,"column":53},"action":"insert","lines":["b"]}],[{"start":{"row":16,"column":41},"end":{"row":16,"column":42},"action":"remove","lines":["3"],"id":18}],[{"start":{"row":16,"column":41},"end":{"row":16,"column":42},"action":"insert","lines":["#"],"id":19}],[{"start":{"row":16,"column":8},"end":{"row":16,"column":9},"action":"insert","lines":["#"],"id":20}],[{"start":{"row":15,"column":8},"end":{"row":15,"column":9},"action":"remove","lines":["#"],"id":21}],[{"start":{"row":29,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["# Create a new record using the model's constructor.","record = MyModelName(my_field_name=\"Instance #1\")","","# Save the object into the database.","record.save()",""],"id":22}],[{"start":{"row":36,"column":0},"end":{"row":43,"column":0},"action":"insert","lines":["# Access model field values using Python attributes.","print(record.id) # should return 1 for the first record.","print(record.my_field_name) # should print 'Instance #1'","","# Change record by modifying the fields, then calling save().","record.my_field_name = \"New Instance Name\"","record.save()",""],"id":23}],[{"start":{"row":46,"column":0},"end":{"row":47,"column":0},"action":"insert","lines":["all_books = Book.objects.all()",""],"id":24}],[{"start":{"row":49,"column":0},"end":{"row":51,"column":0},"action":"insert","lines":["wild_books = Book.objects.filter(title__contains='wild')","number_wild_books = wild_books.count()",""],"id":25}],[{"start":{"row":53,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["# Will match on: Fiction, Science fiction, non-fiction etc.","books_containing_genre = Book.objects.filter(genre__name__icontains='fiction')",""],"id":26}],[{"start":{"row":58,"column":0},"end":{"row":65,"column":0},"action":"insert","lines":["class Genre(models.Model):","    \"\"\"Model representing a book genre.\"\"\"","    name = models.CharField(max_length=200, help_text='Enter a book genre (e.g. Science Fiction)')","","    def __str__(self):","        \"\"\"String for representing the Model object.\"\"\"","        return self.name",""],"id":27}],[{"start":{"row":42,"column":13},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":29},{"start":{"row":43,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":67,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["",""],"id":31},{"start":{"row":68,"column":0},"end":{"row":69,"column":0},"action":"insert","lines":["",""]},{"start":{"row":69,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["",""]},{"start":{"row":70,"column":0},"end":{"row":71,"column":0},"action":"insert","lines":["",""]},{"start":{"row":71,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["",""]},{"start":{"row":72,"column":0},"end":{"row":73,"column":0},"action":"insert","lines":["",""]},{"start":{"row":73,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["",""]},{"start":{"row":74,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["",""]},{"start":{"row":75,"column":0},"end":{"row":76,"column":0},"action":"insert","lines":["",""]},{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":69,"column":0},"end":{"row":94,"column":0},"action":"insert","lines":["from django.urls import reverse # Used to generate URLs by reversing the URL patterns","","class Book(models.Model):","    \"\"\"Model representing a book (but not a specific copy of a book).\"\"\"","    title = models.CharField(max_length=200)","","    # Foreign Key used because book can only have one author, but authors can have multiple books","    # Author is a string rather than an object because it hasn't been declared yet in the file","    author = models.ForeignKey('Author', on_delete=models.SET_NULL, null=True)","","    summary = models.TextField(max_length=1000, help_text='Enter a brief description of the book')","    isbn = models.CharField('ISBN', max_length=13, unique=True,","                             help_text='13 Character <a href=\"https://www.isbn-international.org/content/what-isbn\">ISBN number</a>')","","    # ManyToManyField used because genre can contain many books. Books can cover many genres.","    # Genre class has already been defined so we can specify the object above.","    genre = models.ManyToManyField(Genre, help_text='Select a genre for this book')","","    def __str__(self):","        \"\"\"String for representing the Model object.\"\"\"","        return self.title","","    def get_absolute_url(self):","        \"\"\"Returns the URL to access a detail record for this book.\"\"\"","        return reverse('book-detail', args=[str(self.id)])",""],"id":32}],[{"start":{"row":96,"column":0},"end":{"row":126,"column":0},"action":"insert","lines":["import uuid # Required for unique book instances","","class BookInstance(models.Model):","    \"\"\"Model representing a specific copy of a book (i.e. that can be borrowed from the library).\"\"\"","    id = models.UUIDField(primary_key=True, default=uuid.uuid4, help_text='Unique ID for this particular book across whole library')","    book = models.ForeignKey('Book', on_delete=models.RESTRICT, null=True)","    imprint = models.CharField(max_length=200)","    due_back = models.DateField(null=True, blank=True)","","    LOAN_STATUS = (","        ('m', 'Maintenance'),","        ('o', 'On loan'),","        ('a', 'Available'),","        ('r', 'Reserved'),","    )","","    status = models.CharField(","        max_length=1,","        choices=LOAN_STATUS,","        blank=True,","        default='m',","        help_text='Book availability',","    )","","    class Meta:","        ordering = ['due_back']","","    def __str__(self):","        \"\"\"String for representing the Model object.\"\"\"","        return f'{self.id} ({self.book.title})'",""],"id":33}],[{"start":{"row":128,"column":0},"end":{"row":129,"column":0},"action":"insert","lines":["",""],"id":34},{"start":{"row":129,"column":0},"end":{"row":130,"column":0},"action":"insert","lines":["",""]},{"start":{"row":130,"column":0},"end":{"row":131,"column":0},"action":"insert","lines":["",""]},{"start":{"row":131,"column":0},"end":{"row":132,"column":0},"action":"insert","lines":["",""]},{"start":{"row":132,"column":0},"end":{"row":133,"column":0},"action":"insert","lines":["",""]},{"start":{"row":133,"column":0},"end":{"row":134,"column":0},"action":"insert","lines":["",""]},{"start":{"row":134,"column":0},"end":{"row":135,"column":0},"action":"insert","lines":["",""]},{"start":{"row":135,"column":0},"end":{"row":136,"column":0},"action":"insert","lines":["",""]},{"start":{"row":136,"column":0},"end":{"row":137,"column":0},"action":"insert","lines":["",""]},{"start":{"row":137,"column":0},"end":{"row":138,"column":0},"action":"insert","lines":["",""]},{"start":{"row":138,"column":0},"end":{"row":139,"column":0},"action":"insert","lines":["",""]},{"start":{"row":139,"column":0},"end":{"row":140,"column":0},"action":"insert","lines":["",""]},{"start":{"row":140,"column":0},"end":{"row":141,"column":0},"action":"insert","lines":["",""]},{"start":{"row":141,"column":0},"end":{"row":142,"column":0},"action":"insert","lines":["",""]},{"start":{"row":142,"column":0},"end":{"row":143,"column":0},"action":"insert","lines":["",""]},{"start":{"row":143,"column":0},"end":{"row":144,"column":0},"action":"insert","lines":["",""]},{"start":{"row":144,"column":0},"end":{"row":145,"column":0},"action":"insert","lines":["",""]},{"start":{"row":145,"column":0},"end":{"row":146,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":129,"column":0},"end":{"row":146,"column":0},"action":"insert","lines":["class Author(models.Model):","    \"\"\"Model representing an author.\"\"\"","    first_name = models.CharField(max_length=100)","    last_name = models.CharField(max_length=100)","    date_of_birth = models.DateField(null=True, blank=True)","    date_of_death = models.DateField('Died', null=True, blank=True)","","    class Meta:","        ordering = ['last_name', 'first_name']","","    def get_absolute_url(self):","        \"\"\"Returns the URL to access a particular author instance.\"\"\"","        return reverse('author-detail', args=[str(self.id)])","","    def __str__(self):","        \"\"\"String for representing the Model object.\"\"\"","        return f'{self.last_name}, {self.first_name}'",""],"id":35}],[{"start":{"row":53,"column":0},"end":{"row":54,"column":0},"action":"remove","lines":["",""],"id":36},{"start":{"row":52,"column":38},"end":{"row":53,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["",""],"id":37},{"start":{"row":48,"column":30},"end":{"row":49,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":600,"scrollleft":0,"selection":{"start":{"row":48,"column":30},"end":{"row":48,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":41,"state":"start","mode":"ace/mode/python"}},"timestamp":1686013400538}